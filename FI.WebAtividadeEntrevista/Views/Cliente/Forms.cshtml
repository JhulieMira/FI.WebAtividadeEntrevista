
<form id="formCadastro" method="post">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="Nome">Nome:</label>
                <input required="required" type="text" class="form-control" id="Nome" name="Nome" placeholder="Ex.: João" maxlength="50">
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="Sobrenome">Sobrenome:</label>
                <input required="required" type="text" class="form-control" id="Sobrenome" name="Sobrenome" placeholder="Ex.: da Silva" maxlength="255">
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="CPF">CPF:</label>
                <input required="required" type="text" class="form-control" id="CPF" name="CPF" placeholder="000.000.000-00" maxlength="14">
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="Nacionalidade">Nacionalidade:</label>
                <input required="required" type="text" class="form-control" id="Nacionalidade" name="Nacionalidade" placeholder="Ex.: brasileira" maxlength="50">
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label for="CEP">CEP:</label>
                <input required="required" type="text" class="form-control" id="CEP" name="CEP" placeholder="Ex.: 01011-100" maxlength="9">
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label for="Estado">Estado:</label>
                <select required="required" id="Estado" class="form-control" name="Estado">
                    <option value="">Selecione</option>
                    <option value="SP">São Paulo</option>
                    <option value="PE">Pernambuco</option>
                </select>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label for="Cidade">Cidade:</label>
                <input required="required" type="text" class="form-control" id="Cidade" name="Cidade" maxlength="50" placeholder="Ex.: São Paulo">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <label for="Logradouro">Logradouro:</label>
                <input required="required" type="text" class="form-control" id="Logradouro" name="Logradouro" placeholder="Ex.: Rua Boa Vista 253" maxlength="500">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="Email">E-mail:</label>
                <input required="required" type="text" class="form-control" id="Email" name="Email" placeholder="Ex.: email@email.com" maxlength="2079">
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="Telefone">Telefone:</label>
                <input required="required" type="tel" class="form-control" id="Telefone" name="Telefone" placeholder="Ex.: (11) 2020-3030" maxlength="15">
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="pull-right">
                <button type="submit" class="btn btn-sm btn-success">Salvar</button>
                @Html.ActionLink("Voltar", "Index", "Cliente", new { }, new { @class = "btn btn-sm btn-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="pull-left">
                <button type="button" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#beneficiariosModal">
                    Beneficiários
                </button>
            </div>
        </div>

    </div>

    <input type="hidden" id="BeneficiariosJson" name="BeneficiariosJson" />
    <input type="hidden" id="Id" name="Id" />

</form>

<!-- Modal -->
<div class="modal fade" id="beneficiariosModal" tabindex="-1" role="dialog" aria-labelledby="beneficiariosModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="beneficiariosModalLabel">Beneficiários</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body" id="conteudoBeneficiarios">

            </div>

        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    if (typeof window.beneficiarios === 'undefined') {
        window.beneficiarios = [];
    }

    window.adicionarBeneficiario = function(cpf, nome) {
        window.beneficiarios.push({ CPF: cpf, Nome: nome });
    };

    // Função para limpar beneficiários em memória (sem ID)
    window.limparBeneficiariosEmMemoria = function() {
        window.beneficiarios = window.beneficiarios.filter(b => b.Id);
    };

    $('#beneficiariosModal').on('show.bs.modal', function () {
        $('#conteudoBeneficiarios').load('@Url.Action("CarregarConteudoBeneficiarios", "Beneficiario")', function() {
            const clienteId = $('#Id').val();
            if (clienteId) {
                $.ajax({
                    url: '@Url.Action("ListarBeneficiariosPorCliente", "Beneficiario")',
                    method: "GET",
                    data: { clienteId: clienteId },
                    success: function(response) {
                        if (response.Result === "OK" && response.Records) {
                            // Preserva beneficiários em memória (sem ID)
                            const beneficiariosEmMemoria = window.beneficiarios.filter(b => !b.Id);
                            
                            // Carrega beneficiários do servidor
                            window.beneficiarios = [];
                            response.Records.forEach(function(beneficiario) {
                                window.beneficiarios.push({
                                    Id: beneficiario.Id,
                                    CPF: beneficiario.CPF,
                                    Nome: beneficiario.Nome
                                });
                            });
                            
                            // Adiciona de volta os beneficiários em memória, evitando duplicatas
                            beneficiariosEmMemoria.forEach(function(beneficiario) {
                                // Verifica se já existe um beneficiário com o mesmo CPF
                                const existeCPF = window.beneficiarios.some(b => b.CPF === beneficiario.CPF);
                                if (!existeCPF) {
                                    window.beneficiarios.push(beneficiario);
                                }
                            });
                            
                            window.renderizarTabelaBeneficiarios();
                        }
                    },
                    error: function() {
                        console.log('Erro ao carregar beneficiários');
                        // Em caso de erro, pelo menos renderiza os beneficiários em memória
                        setTimeout(function() {
                            if (window.beneficiarios.length > 0) {
                                window.renderizarTabelaBeneficiarios();
                            }
                        }, 100);
                    }
                });
            } else {
                setTimeout(function() {
                    if (window.beneficiarios.length > 0) {
                        window.renderizarTabelaBeneficiarios();
                    }
                }, 100);
            }
        });
    });

    $('#formCadastro').on('submit', function () {
        $('#BeneficiariosJson').val(JSON.stringify(window.beneficiarios));
    });

    // Detecta quando o formulário é submetido com sucesso
    $(document).ajaxSuccess(function(event, xhr, settings) {
        if (settings.url && (settings.url.includes('/Cliente/Incluir') || settings.url.includes('/Cliente/Alterar'))) {
            try {
                const response = JSON.parse(xhr.responseText);
                if (typeof response === 'string' && response.includes('sucesso')) {
                    // Cliente salvo com sucesso, limpa beneficiários em memória
                    window.limparBeneficiariosEmMemoria();
                }
            } catch (e) {
                // Se não conseguir fazer parse, assume que foi sucesso
                window.limparBeneficiariosEmMemoria();
            }
        }
    });

    // Limpa beneficiários em memória quando o formulário é submetido com sucesso
    $(document).on('clienteSalvoComSucesso', function() {
        window.limparBeneficiariosEmMemoria();
    });
</script>
    